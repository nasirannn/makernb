import { query } from '../lib/neon';

async function checkDatabaseTables() {
  try {
    console.log('üîç Checking database tables...\n');

    // Ê£ÄÊü•ÊâÄÊúâË°®
    const tablesResult = await query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name;
    `);

    console.log('üìã Available tables:');
    tablesResult.rows.forEach((row, index) => {
      console.log(`${index + 1}. ${row.table_name}`);
    });

    // Ê£ÄÊü•ÊòØÂê¶Â≠òÂú® users Ë°®
    const usersTableExists = tablesResult.rows.some(row => row.table_name === 'users');
    console.log(`\nüë§ users table exists: ${usersTableExists ? '‚úÖ' : '‚ùå'}`);

    // Ê£ÄÊü•ÊòØÂê¶Â≠òÂú® user_credits Ë°®
    const userCreditsTableExists = tablesResult.rows.some(row => row.table_name === 'user_credits');
    console.log(`üí∞ user_credits table exists: ${userCreditsTableExists ? '‚úÖ' : '‚ùå'}`);

    if (userCreditsTableExists) {
      // Ê£ÄÊü• user_credits Ë°®ÁªìÊûÑ
      console.log('\nüìä user_credits table structure:');
      const structureResult = await query(`
        SELECT column_name, data_type, is_nullable, column_default
        FROM information_schema.columns 
        WHERE table_name = 'user_credits' 
        ORDER BY ordinal_position;
      `);

      structureResult.rows.forEach(row => {
        console.log(`  - ${row.column_name}: ${row.data_type} ${row.is_nullable === 'NO' ? '(NOT NULL)' : '(NULLABLE)'} ${row.column_default ? `DEFAULT ${row.column_default}` : ''}`);
      });

      // Ê£ÄÊü•Ë°®‰∏≠ÁöÑÊï∞ÊçÆ
      const countResult = await query('SELECT COUNT(*) as count FROM user_credits');
      console.log(`\nüìà user_credits table has ${countResult.rows[0].count} records`);

      if (parseInt(countResult.rows[0].count) > 0) {
        const sampleResult = await query('SELECT * FROM user_credits LIMIT 3');
        console.log('\nüìù Sample records:');
        sampleResult.rows.forEach((row, index) => {
          console.log(`  ${index + 1}. User ID: ${row.user_id}, Credits: ${row.credits}`);
        });
      }
    }

    if (usersTableExists) {
      // Ê£ÄÊü• users Ë°®ÁªìÊûÑ
      console.log('\nüìä users table structure:');
      const structureResult = await query(`
        SELECT column_name, data_type, is_nullable, column_default
        FROM information_schema.columns 
        WHERE table_name = 'users' 
        ORDER BY ordinal_position;
      `);

      structureResult.rows.forEach(row => {
        console.log(`  - ${row.column_name}: ${row.data_type} ${row.is_nullable === 'NO' ? '(NOT NULL)' : '(NULLABLE)'} ${row.column_default ? `DEFAULT ${row.column_default}` : ''}`);
      });
    }

  } catch (error) {
    console.error('‚ùå Error checking database tables:', error);
  }
}

checkDatabaseTables();
